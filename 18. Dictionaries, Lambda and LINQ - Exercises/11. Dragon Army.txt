using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication41
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            var dragons = new Dictionary<string, SortedDictionary<string, int[]>>();
            for (int i = 0; i < n; i++)
            {
                string[] input = Console.ReadLine()
                    .Split(' ')
                    .ToArray();
                if (!dragons.ContainsKey(input[0]))
                    dragons.Add(input[0], new SortedDictionary<string, int[]>());
                if (!dragons[input[0]].ContainsKey(input[1]))
                    dragons[input[0]].Add(input[1], new int[3]);
                if (input[2] == "null")
                    dragons[input[0]][input[1]][0] = 45;
                else
                    dragons[input[0]][input[1]][0] = int.Parse(input[2]);
                if (input[3] == "null")
                    dragons[input[0]][input[1]][1] = 250;
                else
                    dragons[input[0]][input[1]][1] = int.Parse(input[3]);
                if (input[4] == "null")
                    dragons[input[0]][input[1]][2] = 10;
                else
                    dragons[input[0]][input[1]][2] = int.Parse(input[4]);
            }
            double[] averageStats = new double[3];
            for (int i = 0; i < 3; i++)
                averageStats[i] = 0;
            foreach(var type in dragons)
            {
                for (int i = 0; i < 3; i++)
                    averageStats[i] = 0;
                foreach (var dragon in dragons[type.Key])
                {
                    averageStats[0] += dragon.Value[0];
                    averageStats[1] += dragon.Value[1];
                    averageStats[2] += dragon.Value[2];
                }
                averageStats[0] = (double)averageStats[0] / dragons[type.Key].Count;
                averageStats[1] = (double)averageStats[1] / dragons[type.Key].Count;
                averageStats[2] = (double)averageStats[2] / dragons[type.Key].Count;
                Console.WriteLine("{0}::({1:f2}/{2:f2}/{3:f2})", 
                    type.Key, averageStats[0], averageStats[1], averageStats[2]);
                foreach(var dragon in dragons[type.Key])
                {
                    Console.WriteLine("-{0} -> damage: {1}, health: {2}, armor: {3}",
                        dragon.Key, dragon.Value[0], dragon.Value[1], dragon.Value[2]);
                }
            }
        }
    }
}
